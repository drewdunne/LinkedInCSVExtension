{"version":3,"file":"bundle.js","mappings":"6GAKA,wBAA6BA,GAI3B,IAHA,IAAIC,EAA2B,iBAAZD,EAAuBE,KAAKC,MAAMH,GAAYA,EAC7DI,EAAM,GAEDC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACnC,IAAIE,EAAO,GACX,IAAK,IAAIC,KAASP,EAAMI,GACR,IAARE,IAAYA,GAAQ,KAExBA,GAAQN,EAAMI,GAAGG,GAGrBJ,GAAOG,EAAO,M,CAGlB,OAAOH,CACT,C,gECrBAK,QAAQC,IAAI,eAEZ,eASA,mBAAsCC,EAAcC,EAAgBC,GAElEJ,QAAQC,IAAI,wBAERC,GACFC,EAAKE,QAAQH,GAGf,MAAMI,GAAU,IAAAC,cAAad,KAAKe,UAAUL,IACtCM,EAAmBL,EAAY,QAAU,EAE/C,IAAIM,EAAO,IAAIC,KAAK,CAACL,GAAU,CAAEM,KAAM,4BACnCC,EAAOC,SAASC,cAAc,KAClC,QAAsBC,IAAlBH,EAAKI,SAAwB,CAE7B,IAAIC,EAAMC,IAAIC,gBAAgBV,GAC9BG,EAAKQ,aAAa,OAAQH,GAC1BL,EAAKQ,aAAa,WAAYZ,GAC9BI,EAAKS,MAAMC,WAAa,SACxBT,SAASU,KAAKC,YAAYZ,GAC1BA,EAAKa,QACLZ,SAASU,KAAKG,YAAYd,E,CAEhC,C,2JClCA,iBAWA,qB,YACE,MAAMe,EAAoB,GAEpBC,EAAiI,QAAnH,EAAAf,SAASgB,uBAAuB,iCAAiC,GAAGC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGC,mBAAW,eAAEC,cAAcC,OAAOC,UAQxJC,EAAqBtB,SAASgB,uBAAuB,yCAE3D,IAAK,IAAIlC,EAAI,EAAGA,EAAIwC,EAAmBvC,OAAQD,IAAK,CAClD,MAAMyC,EAA4G,QAArG,EAAAD,EAAmBxC,GAAGkC,uBAAuB,0CAA0C,GAAGE,mBAAW,eAAEE,OAAOC,UACrHG,EAA8I,QAAtI,EAAAF,EAAmBxC,GAAGkC,uBAAuB,mCAAmC,GAAGA,uBAAuB,cAAc,GAAGE,mBAAW,eAAEE,OAAOC,UACvJI,EAAmG,QAArF,EAAAH,EAAmBxC,GAAGmC,SAAS,GAAGD,uBAAuB,cAAc,GAAGE,mBAAW,eAAEE,OAC3GN,EAAOY,KAAK,CAACC,KAAMJ,EAAMK,MAAOJ,EAAOK,YAAaJ,G,CAGtDvC,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI2B,IAEZ,aAlBgB,CACda,KAAM,OACNC,MAAO,QACPC,YAAa,eAeQf,EAAQC,EAAc,aAC/C,C,udCnCA,kBAEA7B,QAAQC,IAAI,mBAEZ,MAAM2C,EAAS9B,SAAS+B,eAAe,mBAEvCD,SAAAA,EAAQE,iBAAiB,SAAS,IAAW,OAAD,6BAC1C9C,QAAQC,IAAI,YACZ,IAAK8C,SAAaC,OAAOC,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAEnE,MAAMC,EAAY,CAChBC,OAAQ,CAAEC,MAAOR,EAAIS,GAAKT,EAAIS,IAAM,GACpCC,KAAM,UACNC,KAAM,IAGRV,OAAOW,UAAUC,cAAcP,EACjC,K,GChBIQ,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB/C,IAAjBgD,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CCnB0BH,CAAoB,I","sources":["webpack://linkedin-csv-extension/./lib/utils.ts","webpack://linkedin-csv-extension/./src/exporter.ts","webpack://linkedin-csv-extension/./src/linkedIn.ts","webpack://linkedin-csv-extension/./src/popup.ts","webpack://linkedin-csv-extension/webpack/bootstrap","webpack://linkedin-csv-extension/webpack/startup"],"sourcesContent":["/**\r\n * Converts JSON-formatted data to CSV formatting (to later be exported to a CSV file)\r\n * @param objArray JSON-formatted Array of data to be used in CSV File \r\n * @returns \r\n */\r\nexport function convertToCSV(objArray) {\r\n  var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n  var str = '';\r\n\r\n  for (var i = 0; i < array.length; i++) {\r\n      var line = '';\r\n      for (var index in array[i]) {\r\n          if (line != '') line += ','\r\n\r\n          line += array[i][index];\r\n      }\r\n\r\n      str += line + '\\r\\n';\r\n  }\r\n\r\n  return str;\r\n}","console.log(\"In exporter\");\r\n\r\nimport { convertToCSV } from '../lib/utils'\r\nimport { Person } from './linkedIn';\r\n\r\n/**\r\n * Exports a CSV file with the given parameters\r\n * @param headers The headers to be displayed in the first row of the CSV file\r\n * @param data The data to be used in populating the CSV file\r\n * @param fileTitle The desired title of the CSV file. Do not include file extension.\r\n */\r\nexport default function exportCSVFile(headers: any, data: Person[], fileTitle: string | undefined) {\r\n\r\n  console.log(\"inside exportCSVFile\")\r\n\r\n  if (headers) {\r\n    data.unshift(headers);\r\n  }\r\n\r\n  const csvData = convertToCSV(JSON.stringify(data));\r\n  const exportedFilename = fileTitle + '.csv' || 'export.csv';\r\n\r\n  var blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\r\n  var link = document.createElement(\"a\");\r\n  if (link.download !== undefined) { // feature detection\r\n      // Browsers that support HTML5 download attribute\r\n      var url = URL.createObjectURL(blob);\r\n      link.setAttribute(\"href\", url);\r\n      link.setAttribute(\"download\", exportedFilename);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n  }\r\n}","import exportCSVFile from \"./exporter\";\r\n\r\nexport type Person = {\r\n  Name: string | undefined,\r\n  Title: string | undefined,\r\n  Connections: string | undefined,\r\n}\r\n\r\n/**\r\n * Scrapes the DOM and exports a CSV-formatted list of all employees and your relationship to them\r\n */\r\nexport default function exportLinkedInCompanyEmployees() {\r\n  const people : Person[] = [];\r\n\r\n  const companyName = document.getElementsByClassName(\"org-top-card__primary-content\")[0].children[1].children[0].children[0].textContent?.toLowerCase().trim().trimEnd();\r\n\r\n  const headers = {\r\n    Name: \"Name\",\r\n    Title: \"Title\",\r\n    Connections: \"Connections\"\r\n  }\r\n\r\n  const peopleCardElements = document.getElementsByClassName(\"org-people-profile-card__profile-info\");\r\n\r\n  for (let i = 0; i < peopleCardElements.length; i++) {\r\n    const name = peopleCardElements[i].getElementsByClassName(\"org-people-profile-card__profile-title\")[0].textContent?.trim().trimEnd();\r\n    const title = peopleCardElements[i].getElementsByClassName(\"artdeco-entity-lockup__subtitle\")[0].getElementsByClassName(\"ember-view\")[0].textContent?.trim().trimEnd();\r\n    const connections = peopleCardElements[i].children[1].getElementsByClassName(\"ember-view\")[0].textContent?.trim();\r\n    people.push({Name: name, Title: title, Connections: connections})\r\n  }\r\n\r\n  console.log(companyName);\r\n  console.log(people);\r\n\r\n  exportCSVFile(headers, people, companyName + \"_employees\");\r\n}","import exportLinkedInCompanyEmployees from './linkedIn';\r\n\r\nconsole.log(\"loaded popup.js\")\r\n\r\nconst button = document.getElementById(\"download-button\");\r\n\r\nbutton?.addEventListener(\"click\", async() => {\r\n  console.log(\"clicked!\")\r\n  let [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\r\n\r\n  const injection = {\r\n    target: { tabId: tab.id ? tab.id : -1 },\r\n    func: exportLinkedInCompanyEmployees,\r\n    args: [],\r\n  }\r\n\r\n  chrome.scripting.executeScript(injection)\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(975);\n"],"names":["objArray","array","JSON","parse","str","i","length","line","index","console","log","headers","data","fileTitle","unshift","csvData","convertToCSV","stringify","exportedFilename","blob","Blob","type","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","people","companyName","getElementsByClassName","children","textContent","toLowerCase","trim","trimEnd","peopleCardElements","name","title","connections","push","Name","Title","Connections","button","getElementById","addEventListener","tab","chrome","tabs","query","active","currentWindow","injection","target","tabId","id","func","args","scripting","executeScript","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call"],"sourceRoot":""}